--- /Users/tamaneko/upside/Project-BearMoon/uniswap-original/v2-core/contracts/UniswapV2ERC20.sol	2025-05-15 10:53:14
+++ /Users/tamaneko/upside/Project-BearMoon/kodiak-contracts/UniswapV2Factory/src/pools/v2-core/UniswapV2ERC20.sol	2025-05-13 12:16:48
@@ -1,4 +1,4 @@
-pragma solidity =0.5.16;
+pragma solidity =0.8.19;
 
 import './interfaces/IUniswapV2ERC20.sol';
 import './libraries/SafeMath.sol';
@@ -18,14 +18,8 @@
     bytes32 public constant PERMIT_TYPEHASH = 0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9;
     mapping(address => uint) public nonces;
 
-    event Approval(address indexed owner, address indexed spender, uint value);
-    event Transfer(address indexed from, address indexed to, uint value);
-
-    constructor() public {
-        uint chainId;
-        assembly {
-            chainId := chainid
-        }
+    constructor() {
+        uint chainId = block.chainid;
         DOMAIN_SEPARATOR = keccak256(
             abi.encode(
                 keccak256('EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)'),
@@ -71,7 +65,7 @@
     }
 
     function transferFrom(address from, address to, uint value) external returns (bool) {
-        if (allowance[from][msg.sender] != uint(-1)) {
+        if (allowance[from][msg.sender] != type(uint).max) {
             allowance[from][msg.sender] = allowance[from][msg.sender].sub(value);
         }
         _transfer(from, to, value);
